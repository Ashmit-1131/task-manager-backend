# Database Schema Documentation

This project uses **MongoDB** with **Mongoose** to store users, their tasks, and subtasks using embedded documents. 
This pattern is ideal for data that is frequently accessed together.

---

## Example User Document

```json
{
  "name": "Ashmit Yadav",
  "email": "ashmit@gmail.com",
  "password": "<hashed_password>",
  "tasks": [
    {
      "subject": "complete backend integration",
      "deadline": "2025-07-25T18:30:00.000Z",
      "status": "pending",
      "deleted": false,
      "subtasks": [
        {
          "subject": "Set up MongoDB schema",
          "deadline": "2025-07-21T12:00:00.000Z",
          "status": "done",
          "deleted": false
        }
      ]
    }
  ]
}
```

---

## User Document Structure

Each user is stored as a single document that embeds an array of tasks. Tasks themselves embed subtasks.

**Fields:**

* **name** (String): User’s name.
* **email** (String, unique): User’s login email.
* **password** (String): Hashed password.
* **tasks** (Array): List of task objects.

---

## Task Object Structure

Embedded within each **User** document under `tasks`:

* **subject** (String): Task title or description.
* **deadline** (Date): Due date for the task.
* **status** (String): e.g. "pending" or "done".
* **deleted** (Boolean): Soft-delete flag (default `false`).
* **subtasks** (Array): List of embedded subtask objects.

---

## Subtask Object Structure

Embedded within each **Task** document under `subtasks`:

* **subject** (String): Subtask description.
* **deadline** (Date): Subtask due date.
* **status** (String): e.g. "pending" or "done".
* **deleted** (Boolean): Soft-delete flag.

---

## Soft Deletion Strategy

Instead of permanently deleting, we use a `deleted` boolean flag to mark tasks or subtasks as removed. 
This preserves the record for audits.

* **Query active tasks/subtasks:** include `{ deleted: { $ne: true } }` in your filters.

**Example (Mongoose):**

```js
User.findOne({ email: req.user.email })
  .select('tasks')
  .then(user => {
    const active = user.tasks.filter(t => !t.deleted);
  });
```

All API routes that list tasks or subtasks apply this filter by default to hide soft-deleted items.
